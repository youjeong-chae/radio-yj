<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<bean id="customAccessDenied" class="com.radio.security.CustomAccessDeniedHandler"></bean>
<!-- 
	<bean id="customLoginSuccess" class="org.zerock.security.CustomLoginSuccessHandler"></bean>
 -->
 <!-- 
	<bean id="customLoginSuccess2" 
	class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler"></bean>
  -->
	<!-- 
	<bean id="customPasswordEncoder" class="org.zerock.security.CustomNoOpPasswordEncoder"></bean>
	 -->
	 

	 <bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
	<bean id="customUserDetailsService" class="com.radio.security.CustomUserDetailsService"></bean>
	
	
	<security:http auto-config="true" use-expressions="true">
	
		<security:intercept-url pattern="/sample/all" access="permitAll"/>
		<security:intercept-url pattern="/sample/member" access="hasRole('ROLE_MEMBER')"/>
		<security:intercept-url pattern="/sample/admin" access="hasRole('ROLE_ADMIN')"/>
		
		<security:access-denied-handler ref="customAccessDenied"/>
		<security:form-login login-page="/customLogin"/>
		<!-- 
		<security:form-login login-page="/customLogin" authentication-success-handler-ref="customLoginSuccess2"/>
		 -->

		<security:logout invalidate-session="true"
		 delete-cookies="remember-me, JSESSION_ID" logout-success-url="/"/>

		<security:remember-me data-source-ref="dataSource" token-validity-seconds="604800"/>
		<!-- 
		<security:form-login/>
		 -->

		<security:access-denied-handler error-page="/accessError"/>
		 
	</security:http>
	
	<security:authentication-manager>
		<security:authentication-provider user-service-ref="customUserDetailsService">
		<!-- 
			<security:jdbc-user-service data-source-ref="dataSource"/>
		 -->
			<!-- 
		 	<security:jdbc-user-service data-source-ref="dataSource"
		 		users-by-username-query="select member_id, member_password, enabled
										from tbl_member_existing
										where member_id = ?"
				authorities-by-username-query="select member_id, auth
												from tbl_member_auth
												where member_id = ?"/>
			 -->
			<security:password-encoder ref="bcryptPasswordEncoder"/>
		</security:authentication-provider>
		
	</security:authentication-manager>
	
</beans>
